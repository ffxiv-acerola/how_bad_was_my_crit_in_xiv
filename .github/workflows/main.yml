name: CI/CD Pipeline

on:
  push:
    branches: [ main, cicd ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Setup uv
      uses: astral-sh/setup-uv@v1

    - name: Install dependencies
      run: uv sync --all-extras


    - name: Generate testing config.py
      run: |
        cat << EOF > crit_app/config.py
        from pathlib import Path

        BASE_PATH = Path("${{ github.workspace }}")
        FFLOGS_TOKEN = "${{ secrets.FFLOGS_TOKEN }}"
        DB_URI = BASE_PATH / Path("data/reports.db")
        BLOB_URI = BASE_PATH / Path("data/blobs")
        DEBUG = False
        DRY_RUN = False
        ERROR_LOGIN_DATA = ${{ secrets.ERROR_LOGIN_DATA }}
        DASH_AUTH_SECRET = "${{ secrets.DASH_AUTH_SECRET }}"
        EOF

    - name: Run tests
      run: uv run pytest --junitxml=pytest-results.xml --cov --cov-report=xml --cov-report=html

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/cicd'
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Setup uv
      uses: astral-sh/setup-uv@v1

    - name: Generate prod config.py
      run: |
        cat << EOF > crit_app/config.py
        from pathlib import Path

        BASE_PATH = Path("${{ secrets.DEPLOY_PATH }}")
        FFLOGS_TOKEN = "${{ secrets.FFLOGS_TOKEN }}"
        DB_URI = BASE_PATH / Path("data/reports.db")
        BLOB_URI = BASE_PATH / Path("data/blobs")
        DEBUG = False
        DRY_RUN = False
        ERROR_LOGIN_DATA = ${{ secrets.ERROR_LOGIN_DATA }}
        DASH_AUTH_SECRET = "${{ secrets.DASH_AUTH_SECRET }}"
        EOF

    - name: Generate potencies.csv
      run: |
        uv sync --all-extras
        uv run python fflogs_rotation/job_data/potencies/create_potencies.py

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to production
      run: |
        rsync -avz --delete \
          -e "ssh -i ~/.ssh/id_rsa" \
          --exclude '.git*' \
          --exclude 'tests' \
          --exclude '.pytest_cache' \
          --exclude '__pycache__' \
          --exclude '.ruff_cache' \
          --exclude 'deploy' \
          ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.DEPLOY_PATH }}/

    - name: Update server dependencies
      run: |
        ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'cd ${{ secrets.DEPLOY_PATH }} && ${HOME}/.local/bin/uv sync --all-extras'

    # - name: Restart services
    #   run: |
    #     ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'sudo supervisorctl restart crit_app crit_app_errors'
